% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classification.R
\name{privateRF}
\alias{privateRF}
\title{Private random forests algorithm}
\usage{
privateRF(
  train.ds = NULL,
  holdout.ds = NULL,
  validation.ds = NULL,
  label = "class",
  is.simulated = TRUE,
  rf.importance.measure = "MeanDecreaseGini",
  rf.ntree = 500,
  rf.mtry = NULL,
  pec.file = NULL,
  update.freq = 50,
  threshold = 4/sqrt(nrow(train.ds)),
  tolerance = 1/sqrt(nrow(train.ds)),
  signal.names = NULL,
  save.file = NULL,
  verbose = FALSE
)
}
\arguments{
\item{train.ds}{A data frame with training data and outcome labels}

\item{holdout.ds}{A data frame with holdout data and outcome labels}

\item{validation.ds}{A data frame with validation data and outcome labels}

\item{label}{A character vector of the outcome variable column name}

\item{is.simulated}{Is the data simulated (or real?)}

\item{rf.importance.measure}{A character vector for the random forest importance measure}

\item{rf.ntree}{An integer the number of trees in the random forest}

\item{rf.mtry}{An integer the number of variables sampled at each random forest node split}

\item{pec.file}{A character vector filename of privateEC results}

\item{update.freq}{A integer for the number of steps before update}

\item{threshold}{A numeric, default 4 / sqrt(n) suggested in the
thresholdout’s supplementary material (Dwork, et al.,2015)}

\item{tolerance}{A numeric, default 1 / sqrt(n) suggested in the
thresholdout’s supplementary material (Dwork, et al.,2015)}

\item{signal.names}{A character vector of signal names in simulated data}

\item{save.file}{A character vector for results filename or NULL to skip}

\item{verbose}{A flag indicating whether verbose output be sent to stdout}
}
\value{
A list containing:
\describe{
  \item{algo.acc}{data frame of results, a row for each update}
  \item{ggplot.data}{melted results data frame for plotting}
  \item{correct}{number of variables detected correctly in each data set}
  \item{elapsed}{total elapsed time}
}
}
\description{
Random Forest Thresholdout, which is TO with the feature selection
and classifier replaced with Random Forest.
}
\examples{
num.samples <- 100
num.variables <- 100
pct.signals <- 0.1
label <- "class"
temp.pec.file <- tempfile(pattern = "pEc_temp", tmpdir = tempdir())
sim.data <- createSimulation(num.variables = num.variables,
                             num.samples = num.samples,
                             pct.signals = pct.signals,
                             label = label,
                             sim.type = "mainEffect",
                             pct.train = 1 / 3,
                             pct.holdout = 1 / 3,
                             pct.validation = 1 / 3,
                             verbose = FALSE)
pec.results <- privateEC(train.ds = sim.data$train,
                         holdout.ds = sim.data$holdout,
                         validation.ds = sim.data$validation,
                         label = sim.data$label,
                         is.simulated = TRUE,
                         signal.names = sim.data$signal.names,
                         save.file = temp.pec.file,
                         verbose = FALSE)
prf.results <- privateRF(train.ds = sim.data$train,
                         holdout.ds = sim.data$holdout,
                         validation.ds = sim.data$validation,
                         label = sim.data$label,
                         is.simulated = TRUE,
                         signal.names = sim.data$signal.names,
                         pec.file = temp.pec.file,
                         verbose = FALSE)
}
\seealso{
Other classification: 
\code{\link{epistasisRank}()},
\code{\link{getImportanceScores}()},
\code{\link{originalThresholdout}()},
\code{\link{privateEC}()},
\code{\link{standardRF}()},
\code{\link{xgboostRF}()}
}
\concept{classification}
